"""
Pet Library
Do not edit this file! Instead, look at pet_watch.py.
"""

import tsk
import random 
import tsapp

_cat_images = {"hungry": "CatHungry.png",
               "bored": "CatBored.png",
               "tired": "CatTired.png",
               "happy": "CatHappy.png",
               "sleepy": "CatSleepy.png"}

_dog_images = {"hungry": "DogHungry.png",
               "bored": "DogBored.png",
               "tired": "DogTired.png",
               "happy": "DogHappy.png",
               "sleepy": "DogSleepy.png"}

_cat_scales = {"hungry": 0.4,
               "bored": 0.8,
               "tired": 0.8,
               "happy": 0.4,
               "sleepy": 0.4}

_dog_scales = {"hungry": 0.7,
               "bored": 0.35,
               "tired": 0.35,
               "happy": 0.7,
               "sleepy": 0.8}

class Pet:
    def __init__(self, image, name, scale):
        self._name = name
        self._sprite = tsapp.Sprite(image, 0, 0)
        self._sprite.scale = scale
        self._sprite.center = (500, 280)
        self._moods = ["hungry", "tired", "bored"]
        random.shuffle(self._moods)
        self._moods.append("happy")
        self._moods.append("sleepy")
        self._images = []
        self._image_scales = []
        for mood in self._moods:
            if image == "CatIdle.png":
                state = _cat_images[mood]
                scale = _cat_scales[mood]
            elif image == "DogIdle.png":
                state = _dog_images[mood]
                scale = _dog_scales[mood]
            self._images.append(state)
            self._image_scales.append(scale)
    
    def get_name(self):
        return self._name
    
    def set_name(self, name):
        self._name = name
        
    def get_sprite(self):
        return self._sprite
    
    def get_mood(self, index):
        return self._moods[index]
    
    def get_image(self, index):
        return self._images[index]
    
    def get_image_scale(self, index):
        return self._image_scales[index]
    
    def set_image(self, image):
        self._sprite.image = image
    
    def move_around(self, time):
        direction = [1, -1]      
        self._sprite.center_x += .01 * random.randint(1, 4) * random.choice(direction) * time
        self._sprite.center_y += .01 * random.randint(1, 4) * random.choice(direction) * time